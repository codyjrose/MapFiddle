"use strict";var app=angular.module("app",["ngRoute"]).config(["$routeProvider",function(e){e.when("/options",{templateUrl:"partials/options.html",controller:"MapOptionsController"}).when("/features",{templateUrl:"partials/features.html",controller:"MapFeaturesController"}).when("/events",{templateUrl:"partials/events.html",controller:"MapEventsController"}).when("/about",{templateUrl:"partials/about.html"}).otherwise({redirectTo:"/options"})}]);app.controller("MapEventsController",["$scope","mapEventsService",function(e,t){e.initEvents=function(){e.events=t.getAll()},e.broadcastChangedEvent=function(e){t.broadcastChangedEvent(e)},e.initEvents()}]),app.controller("MapFeaturesController",["$scope","mapFeatureService",function(e,t){e.initFeatures=function(){e.features=t.getAll()},e.broadcastChangedFeature=function(e){t.broadcastChangedFeature(e)},e.broadcastChangedFeaturePopup=function(e){t.broadcastChangedFeaturePopup(e)},e.initFeatures()}]),app.controller("MapOptionsController",["$scope","mapOptionsService",function(e,t){e.initOptions=function(){e.options=t.getUserConfigurable()},e.changeHandler=function(e){t.broadcastChangedOption(e.name)},e.initOptions()}]),app.controller("NavController",["$scope","$location","mapCodeService",function(e,t,n){var o={"/options":1,"/features":2,"/events":3,"/about":4};e.showHideText=n.showCode()?"Hide ":"Show ",e.btnSuccess=!0,this.selectTab=function(e){this.tab=e},this.isSelected=function(e){return this.tab===e},this.selectTab(t.path()?o[t.path()]:1),this.toggleShowCode=function(){var t=n.toggleShowCode();e.btnSuccess=!t,e.showHideText=t?"Hide ":"Show "}}]),app.controller("ViewCodeController",["$scope","$timeout","mapCodeService",function(e,t,n){e.showCode=function(){return n.showCode()};var o=function(){t(function(){e.markup=n.getCodeView()},0)};e.$on("mapOptionChange",function(){o()}),e.$on("mapFeatureChange",function(){o()}),e.$on("mapFeaturePopupChange",function(){o()}),e.$on("mapMoveEnd",function(){o()}),e.$on("mapEventChange",function(){o()}),o()}]),app.controller("ViewMapController",["$scope","mapOptionsService","mapFeatureService","mapEventsService","mapService",function(e,t,n,o,a){var r={};_.forIn(t.getAllModified(),function(e){r[e.name]=e.value}),a.initMap(r),e.$on("mapOptionChange",function(){var e=t.lastUpdatedOption();a.setMapOption(e)}),e.$on("mapFeatureChange",function(){var e=n.lastUpdatedFeature();a.toggleMapFeature(e)}),e.$on("mapFeaturePopupChange",function(){var e=n.lastUpdatedFeature();a.toggleBindPopupToFeature(e)}),e.$on("mapEventChange",function(){var e=o.lastUpdatedEvent();a.toggleMapEvent(e)}),e.$on("mapMoveEnd",function(){var e=t.getAllWithStateMethod();_.forIn(e,function(e){var n=a.getMap()[e.stateMethod]();t.set(e.name,n)})})}]),app.directive("optionRange",function(){return{scope:{item:"=optionRange"},restrict:"AEC",templateUrl:"templates/option-range.html"}}),app.directive("optionCheckbox",function(){return{scope:{item:"=optionCheckbox"},restrict:"AEC",templateUrl:"templates/option-checkbox.html"}}),app.directive("prettyprintd",function(){return{restrict:"C",link:function(e,t){e.$watch("markup",function(){t.html(prettyPrintOne(e.markup))})}}}),app.factory("mapCodeService",["mapOptionsService","mapFeatureService","mapEventsService",function(e,t,n){var o=!1,a='&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Simple Map&lt;/title&gt;\n&lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no"&gt;\n&lt;meta charset="utf-8"&gt;\n&lt;link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" /&gt;\n&lt;style&gt;html, body, #map { height: 100%; margin: 0; padding: 0 }&lt;/style&gt;\n&lt;script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id="map"&gt;&lt;/div&gt;\n&lt;script&gt;\n',r="&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n",p='"use strict";\n(function() {\n',i='\n  // Create map.\n  // First param is id of div that will contain the map. Second param is the map options object \n  var map = new L.Map("map", options);\n  var osm = new L.TileLayer(options.url, options);\n  map.addLayer(osm);\n',l="}());\n",u=function(){var t="  // Create map options object\n  var options = {\n",n=e.getAllModified();return _.forIn(n,function(e,o){switch(t+="    ",e.type){case"object":t+=e.name+": "+e.value.toString();break;case"array":t+=e.name+": ["+e.value+"]";break;case"number":t+=e.name+": "+e.value;break;case"boolean":t+=e.name+": "+e.value;break;default:t+=e.name+": '"+e.value+"'"}t+=parseInt(o,10)<n.length-1?",\n":"\n"}),t+="  };\n"},c=function(){var e="",n=t.getAllUsed();return n.length?(e+="\n   // Add features\n",_.forIn(n,function(t){e+="  ";var n=t.options();e+="var "+t.name+" = L."+t.name+"(",_.forIn(n,function(t,o){e+=JSON.stringify(t),parseInt(o,10)<n.length-1&&(e+=", ")}),e+=").addTo(map);\n"}),e):""},d=function(){var e="",n=t.getAllUsedPopups();return n.length?(e+="\n  // Add feature popups\n",_.forIn(n,function(t){e+="  ",e+=t.name+".bindPopup(&quot;&lt;b&gt;Hello world&lt;/b&gt;&lt;br&gt;I&#39;m a popup attached to "+t.name+"&quot;);\n"}),e):""},s=function(){var e="",t=n.getAllEnabled();return t.length?(e+="\n  // Add map events\n",_.forIn(t,function(n,o){var a=n.name+"Popup",r=n.name+"Event";e+="  var "+a+" = L.popup();\n",e+="  function "+r+"(e) {\n",e+="    "+a+"\n",e+="      .setLatLng("+n.popupOptions.latLng+")\n",e+="      .setContent('"+n.popupOptions.content+"' + "+n.popupOptions.eventResultContent+")\n",e+="      .openOn(map);\n",e+="  }\n",e+="  map.on('"+n.name+"', "+r+");\n",parseInt(o,10)<t.length-1&&(e+="\n")}),e):""},m=function(){var e=[];return e.push(a),e.push(p),e.push(u()),e.push(i),e.push(c()),e.push(d()),e.push(s()),e.push(l),e.push(r),e.join("")},f=function(){return o=!o};return{getCodeView:m,showCode:function(){return o},toggleShowCode:f}}]),app.factory("mapEventsService",["$rootScope",function(e){var t={},n={};n.data=[{name:"click",label:'"click" event',popupOptions:{content:'The "click" event fired. You clicked the map at ',eventResultContent:"e.latlng",latLng:"e.latlng"},eventLatLng:function(e){return{lat:e.latlng.lat,lng:e.latlng.lng}},enabled:!1,method:"popup"},{name:"moveend",label:'"moveend" event',popupOptions:{content:'The "moveend" event fired. The new map center is ',eventResultContent:"e.target.getCenter().toString()",latLng:"e.target.getCenter()"},eventLatLng:function(e){return{lat:e.target.getCenter().lat,lng:e.target.getCenter().lng}},enabled:!1,method:"popup"}];var o=function(e){try{return _.find(a(),{name:e})}catch(t){}},a=function(){return n.data},r=function(){return _.filter(a(),function(e){return e.enabled})},p=function(n){t=o(n),e.$broadcast("mapEventChange")};return{get:o,getAll:a,getAllEnabled:r,broadcastChangedEvent:p,lastUpdatedEvent:function(){return t}}}]),app.factory("mapFeatureService",["$rootScope","mapService",function(e,t){var n={},o={};o.data=[{name:"marker",obj:null,options:function(){return[t.getMapCenter()]},popupEnabled:!1},{name:"circle",obj:null,options:function(){var e=t.getZoom(),n=5e5;return 0!==e&&(n/=Math.pow(2,.7*e)),[t.getLatLngInCurrentBounds(),n,{color:"red",fillColor:"#f03",fillOpacity:.5}]},popupEnabled:!1},{name:"polygon",obj:null,options:function(){var e=t.getLatLngInCurrentBounds(),n=t.getLatLngInCurrentBounds(),o=t.getLatLngInCurrentBounds();return[[e,n,o]]},popupEnabled:!1}];var a=function(e){try{return _.find(p(),{name:e})}catch(t){}},r=function(e,t){a(e).value=t},p=function(){return o.data},i=function(){return _.filter(p(),function(e){return null!==e.obj})},l=function(){return _.filter(p(),function(e){return e.popupEnabled})},u=function(t){n=a(t),e.$broadcast("mapFeatureChange")},c=function(t){n=a(t),e.$broadcast("mapFeaturePopupChange")},d=function(e){return a(e).obj};return{set:r,get:a,getAll:p,getAllUsedPopups:l,getAllUsed:i,featureEnabled:d,broadcastChangedFeature:u,broadcastChangedFeaturePopup:c,lastUpdatedFeature:function(){return n}}}]),app.factory("mapOptionsService",["$rootScope",function(e){var t={},n=[{name:"zoomControl",value:!0,updateMethod:"control",type:"boolean",label:"Zoom Control",tooltip:"Whether the zoom control is added to the map by default.",required:!1,"default":!0,inputType:"checkbox"},{name:"attributionControl",value:!0,updateMethod:"control",type:"boolean",label:"Attribution Control",tooltip:"Whether the attribution control is added to the map by default.",required:!1,"default":!0,inputType:"checkbox"},{name:"center",value:[51.505,-.09],type:"array",updateMethod:"",label:"Set View",tooltip:"Initial geographical center of the map.",required:!0,"default":[51.505,-.09],inputType:!1,stateMethod:"getCenter"},{name:"zoom",value:13,updateMethod:"",type:"number",label:"Set Zoom",tooltip:"Initial map zoom.",required:!0,"default":13,inputType:!1,stateMethod:"getZoom"},{name:"minZoom",label:"Minimum Zoom Level",tooltip:"Minimum zoom level of the map. Overrides any minZoom set on map layers.",value:0,min:0,max:18,updateMethod:"propertyOfMapDotOptions",type:"number",required:!1,"default":0,inputType:"range",stateMethod:"getMinZoom"},{name:"maxZoom",label:"Max Zoom Level",tooltip:"Maximum zoom level of the map. This overrides any maxZoom set on map layers.",value:18,min:0,max:18,updateMethod:"propertyOfMapDotOptions",type:"number",required:!1,"default":18,inputType:"range",stateMethod:"getMaxZoom"},{name:"dragging",value:!0,type:"boolean",updateMethod:"mapProperty",label:"Dragging",tooltip:"Whether the map be draggable with mouse/touch or not.",required:!1,"default":!0,inputType:"checkbox"},{name:"touchZoom",value:!0,type:"boolean",updateMethod:"mapProperty",label:"Touch Zoom",tooltip:"Whether the map can be zoomed by touch-dragging with two fingers.",required:!1,"default":!0,inputType:"checkbox"},{name:"scrollWheelZoom",value:!0,type:"boolean",updateMethod:"mapProperty",label:"Scroll Wheel Zoom",tooltip:"Whether the map can be zoomed by using the mouse wheel. If passed 'center', it will zoom to the center of the view regardless of where the mouse was.",required:!1,"default":!0,inputType:"checkbox"},{name:"doubleClickZoom",value:!0,type:"boolean",updateMethod:"mapProperty",label:"Double Click Zoom",tooltip:"Whether the map can be zoomed in by double clicking on it and zoomed out by double clicking while holding shift. If passed 'center', double-click zoom will zoom to the center of the view regardless of where the mouse was.",required:!1,"default":!0,inputType:"checkbox"},{name:"url",updateMethod:"",value:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",type:"string",required:!0,inputType:!1},{name:"attribution",updateMethod:"",value:"Map data © OpenStreetMap contributors",type:"string",required:!0,inputType:!1}],o={};o.data=n;var a=function(){return o.data},r=function(e){try{return _.find(a(),{name:e})}catch(t){}},p=function(){return _.filter(a(),function(e){return e.required||e.value!==e.default})},i=function(){return _.filter(a(),function(e){return e.hasOwnProperty("stateMethod")})},l=function(){return _.filter(a(),function(e){return e.inputType!==!1})},u=function(e,t){t instanceof L.LatLng&&(t=[t.lat,t.lng]),r(e).value=t},c=function(n){t=r(n),e.$broadcast("mapOptionChange")};return{set:u,getAllModified:p,getUserConfigurable:l,getAllWithStateMethod:i,broadcastChangedOption:c,lastUpdatedOption:function(){return t}}}]),app.factory("mapService",["$rootScope",function(e){var t,n=function(){var e=L.control({position:"bottomleft"});e.onAdd=function(){var e=L.DomUtil.create("h3","brand legend");return e.innerHTML+="<span id='logo'><i class='fa fa-map-marker'></i> MapFiddle</span>",e},e.addTo(t)},o=function(){t.on("moveend",function(){e.$broadcast("mapMoveEnd")})},a=function(e){L.Icon.Default.imagePath="assets/leaflet/",t=new L.Map("map",e);var a=new L.TileLayer(e.url,e);t.addLayer(a),o(),n()},r=function(){return t},p=function(){return t.getZoom()},i=function(){var e=t.getCenter();return[e.lat,e.lng]},l=function(){var e=t.getBounds().getNorthEast(),n=t.getBounds().getSouthWest(),o=Math.random()*(e.lat-n.lat)+n.lat,a=Math.random()*(e.lng-n.lng)+n.lng;return[o,a]},u=function(e){e.value?t[e.name].enable():t[e.name].disable()},c=function(e){e.value?t[e.name].addTo(t):t[e.name].removeFrom(t)},d=function(e){t.options[e.name]=e.value},s=function(e){switch(e.updateMethod){case"mapProperty":u(e);break;case"control":c(e);break;case"propertyOfMapDotOptions":d(e)}},m=function(e){e.obj=L[e.name].apply(null,e.options()).addTo(t)},f=function(e){t.removeLayer(e.obj),e.obj=null},g=function(e){e.obj.bindPopup("<b>Hello world</b><br>I'm a popup attached to "+e.name),e.popupEnabled=!0},h=function(e){e.obj.unbindPopup(),e.popupEnabled=!1},v=function(e){return e.obj?(h(e),f(e)):m(e),e},b=function(e){e.popupEnabled?g(e):h(e)},C=function(e){t.on(e.name,function(n){var o=e.eventLatLng(n);L[e.method]().setLatLng(o).setContent(e.popupOptions.content+"<b>"+o.lat+","+o.lng+"</b>!").openOn(t)})},y=function(e){t.off(e.name),"moveend"===e.name&&o()},M=function(e){e.enabled?(y(e),e.enabled=!1):(C(e),e.enabled=!0)};return{initMap:a,getMap:r,getMapCenter:i,getZoom:p,getLatLngInCurrentBounds:l,setMapOption:s,toggleMapFeature:v,toggleBindPopupToFeature:b,toggleMapEvent:M}}]);